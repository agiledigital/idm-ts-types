// Generated file
import { idmObject, ReferenceType } from '@agiledigital/idm-ts-types/lib/idm-ts'

{% for mo in managedObjects %}
// {{ mo.name }}
export type {{ mo.tsType }}Defaults = {
    // tslint:disable-next-line: no-duplicate-string
    _tag?: 'managed/{{ mo.name }}'
    {% for prop in mo.properties | selectattr('returnByDefault') -%}{% if prop.title %}
    /**
     * {{ prop.title }}{% if prop.description %}     
     *
     * {{ prop.description }}{% endif %}
     */{% endif %}
    '{{ prop.name }}'{% if prop.required == false %}?{% endif %}: {{ prop.type | safe }}
    {% endfor %}
} & IDMBaseObject

export type {{ mo.tsType }}NonDefaults = {
    {% for prop in mo.properties | rejectattr('returnByDefault') -%}{% if prop.title %}
    /**
     * {{ prop.title }}{% if prop.description %}     
     *
     * {{ prop.description }}{% endif %}
     */{% endif %}
    '{{ prop.name }}'{% if prop.required == false %}?{% endif %}: {{ prop.type | safe }}
    {% endfor %}
}

export type {{ mo.tsType }} = {{ mo.tsType }}Defaults & {{ mo.tsType }}NonDefaults

{% endfor %}

{% for co in connectorObjects %}
// {{ co.fullName }}
export type {{ co.tsType }} = {
    // tslint:disable-next-line: no-duplicate-string
    _tag?: 'system/{{ co.fullName }}'
    {% for prop in co.properties -%}
    '{{ prop.name }}'?: {{ prop.type | safe }}
    {% endfor %}
} & IDMBaseObject

{% endfor %}

export const idm = {
    ...openidm,
    managed: {
        {% for mo in managedObjects -%}
        {{ mo.name }}: idmObject<{{ mo.tsType }}, {{ mo.tsType }}Defaults>('managed/{{ mo.name }}'){% if not loop.last %},{% endif %}
        {% endfor %}
    },
    system: {
        {% for co in connectorObjects -%}
        {{ co.name }}: idmObject<{{ co.tsType }}, {{ co.tsType }}>('system/{{ co.fullName }}'){% if not loop.last %},{% endif %}
        {% endfor %}
    }
}

export default idm